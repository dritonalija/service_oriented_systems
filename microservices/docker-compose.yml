version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: microservices-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: microservices_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  student-service:
    build: ./student-service
    container_name: microservices-student-service
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://microservices-mysql:3306/microservices_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    networks:
      - microservices-network

  course-service:
    build: ./course-service
    container_name: microservices-course-service
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://microservices-mysql:3306/microservices_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    networks:
      - microservices-network

  enrollment-service:
    build: ./enrollment-service
    container_name: microservices-enrollment-service
    ports:
      - "8083:8083"
    depends_on:
      mysql:
        condition: service_healthy
      student-service:
        condition: service_started
      course-service:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://microservices-mysql:3306/microservices_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      STUDENT_SERVICE_URL: http://microservices-student-service:8081
      COURSE_SERVICE_URL: http://microservices-course-service:8082
    networks:
      - microservices-network

  prometheus:
    image: prom/prometheus:latest
    container_name: microservices-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - microservices-network

  grafana:
    image: grafana/grafana:latest
    container_name: microservices-grafana
    ports:
      - "9000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_HTTP_PORT=3000
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=http://localhost:9000
      - GF_SERVER_HTTP_ADDR=0.0.0.0
      - GF_SERVER_PROTOCOL=http
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_PATHS_PLUGINS=/var/lib/grafana/plugins
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - microservices-network
    depends_on:
      - prometheus

volumes:
  mysql-data:
  grafana-storage:

networks:
  microservices-network:
    driver: bridge 